 ✔ Create project via github UI with a README and the Objective-C .gitignore template @started(15-01-06 18:53) @done (15-01-06 18:53) @lasted(0:00)
 ✔ git clone to local machine @started(15-01-06 18:54) @done (15-01-06 18:54) @lasted(0:00)
 ✔ create this todo file @started(15-01-06 18:54) @done (15-01-06 18:54) @lasted(0:00)
 ✔ commit the todo file @started(15-01-06 18:55) @done (15-01-06 18:55) @lasted(0:00)
 ✔ notify BlueFeed guys about the github repo @started(15-01-06 19:00) @done (15-01-06 19:07) @lasted(0:00)
 ✔ draw a quick white board sketch @started(15-01-06 19:08) @done (15-01-06 19:18) @lasted(0:10)
 ✔ upload sketch to repo @started(15-01-06 19:18) @done (15-01-06 19:25) @lasted(0:07)
 ✔ create a quick working prototype in dapp @started(15-01-06 19:25) @done (15-01-06 20:09) @lasted(0:44)
 ✔ upload and compile the app @started(15-01-06 20:09) @done (15-01-06 20:29) @lasted(0:20)
 ✔ get familiar with the code dapp exported and decide if we want to keep it @started(15-01-06 20:31) @done (15-01-06 20:49) @lasted(0:18) - NOTE: don't like dapp, gonna mock it up in balsamiq
 ✔ mock it up in balsamiq @started(15-01-06 21:21) @done (15-01-06 22:24) @lasted(1:03)
 ✔ spend an hour or two just fooling around in xcode - use tutorials, whatever, just get refamiliarized with creating UIs in xcode as well as hitting data sources @started(15-01-07 20:13) @done (15-01-08 22:26) @lasted(2:13)
 ✔ create a view for login with username and password text fields and a "forgot" button @done (15-01-08 15:55)
 ✔ create a view with a tableview that will be our feed view @done (15-01-08 15:55)
 ✔ create a basic navigation that starts with the login view and segues to the feed view when the ios keyboard "return" key is pressed @done (15-01-08 15:55)
 ✔ open the mail app to so user can report forgotten pw when "forgot" button is tapped @done (15-01-08 15:57)
 ✔ layout prototype cell for feed tableview - use balsamiq designs as guide, don't worry about polishing yet @done (15-01-08 16:00)
 ✔ create post model @done (15-01-09 17:45)
 ✔ create comment model @done (15-01-09 17:45)
 ✔ create user model @done (15-01-09 17:45)
 ✔ Install RestKit @done (15-01-09 17:45)
 ✔ Read tutorial on using RestKit to populate a tableview @done (15-01-09 17:45)
   ✔ Seems to require valid JSON. /feed route isn't valid JSON. Waiting to hear back from Rick @done (15-01-09 17:45)
       ✔ Heard back. He suggests I use something simpler than RestKit's object mapping tools for this @done (15-01-09 17:45)
 ✔ get login working @done (15-01-09 22:55)
 ✔ give an error message for failed login @done (15-01-09 22:55)
 ✔ load feed into tableview @done (15-01-09 22:55)
 ☐ make posts look a little better
   ✔ format date @started(15-01-10 10:23) @done (15-01-10 10:43) @lasted(0:20)
   ☐ wrap post text 
     ☐ do this after getting "new post" to work, since we need to add some long post messages to test it
 ✔ filter posts by date at view load - default to last month? @started(15-01-10 11:11) @done (15-01-10 11:23) @lasted(0:12)
 ✔ add header cell at top @started(15-01-10 11:23) @done (15-01-10 13:53) @lasted(2:30)
 ☐ access camera to change pic @started(15-01-10 13:55) @paused(15-01-10 14:31)
    ☐ sent email asking for help to BlueFletch, awaiting response
 ✔ change text of back button to "Sign Out" @started(15-01-10 14:44) @done (15-01-10 14:54) @lasted(1:01)
 ✔ perform logout on back button tap @started(15-01-10 15:15) @done (15-01-10 15:35) @lasted(0:20)
 ✔ add new post button & modal @started(15-01-10 15:36) @done (15-01-10 16:26) @lasted(0:50)
 ☐ add post w/comments view @started(15-01-12 13:17)
   ☐ comments textbox and "post" button at bottom, needs to move up when keyboard is activated
 ☐ 
 ☐ check for internet connection and show error/link to try and reconnect
 ☐ add neverending scrolling
 ☐ polish up everything
   ☐ fix multiline label overflow in table cells
   ☐ add bg color to individual posts for easier viewing
   ☐ better error handling



 to ask bf guys:
   ☐ better way to communicate between modules after an ajax call?
   ☐ how do I get my table cells to dynamically size to fit?
   ☐ file structure/organization best practices?